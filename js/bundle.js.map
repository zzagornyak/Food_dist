{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sCAAsC;AACnD;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,UAAU;;;;;;;;;;;;;;;ACrGoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,4BAA4B,GAAG;AAC/B;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC,4BAA4B,SAAS,SAAS,SAAS;AACvD,kDAAkD,WAAW;AAC7D,gDAAgD,YAAY;AAC5D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2DAAO;AACX;AACA,sCAAsC,yBAAyB;AAC/D;AACA,KAAK;AACL;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC5DpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACD;;;;;;;;;;;;;;;;;ACzD0B;AACA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;AC5FnB,iBAAiB,yEAAyE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,oBAAoB;AACpE,iDAAiD,WAAW;AAC5D;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,iEAAe,MAAM;;;;;;;;;;;;;;AC5IrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACjCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;ACtDpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,IAAI,YAAY,UAAU;AAC5E;AACA;AACA;AACA,IAAsB;AACtB;;;;;;UCfA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNa;AACb;AACkC;AAClC;AACA,IAAwC;AACxC;AACA,IAAyC;AACzC;AACA,IAAwC;AACxC;AACA,IAAsC;AACtC;AACA,IAA0C;AAC1C;AACA,IAAkD;AAClD;AACA,IAA4C;AAC5C;AACA;AACA;AACA;AACA,0CAA0C,0DAAS;AACnD;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,+DAAU;AACd,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://food_dist/./js/modules/calculator.js","webpack://food_dist/./js/modules/cards.js","webpack://food_dist/./js/modules/modal.js","webpack://food_dist/./js/modules/post.js","webpack://food_dist/./js/modules/slider.js","webpack://food_dist/./js/modules/tabs.js","webpack://food_dist/./js/modules/timer.js","webpack://food_dist/./js/services/services.js","webpack://food_dist/webpack/bootstrap","webpack://food_dist/webpack/runtime/define property getters","webpack://food_dist/webpack/runtime/hasOwnProperty shorthand","webpack://food_dist/webpack/runtime/make namespace object","webpack://food_dist/./js/script.js"],"sourcesContent":["function calculator() {\r\n    \r\n    let elemArray = {\r\n        gender: \"\", \r\n        height : 0, \r\n        weight : 0, \r\n        age : 0, \r\n        activity : 0\r\n    };\r\n    \r\n\r\n    const result = document.querySelector(\".calculating__result span\"),\r\n          chooseItems = document.querySelectorAll(\".calculating__choose-item\");\r\n\r\n    // Функция показ результата калькулятора, вызываем в каждом ивенте, чтобы срабатывало в любом направлении заполнения\r\n    const getResult = () => {\r\n        let {gender, height,weight, age, activity} = elemArray;\r\n        if (!gender || !height || !weight || !age || !activity) {\r\n            result.textContent = 0;\r\n            return;\r\n        } else if (gender == \"male\") {\r\n            result.textContent = Math.floor(((10 * weight) + (6.25 * height) - (5 * age) + 5) * activity);\r\n        } else {\r\n            result.textContent = Math.floor(((10 * weight) + (6.25 * height) - (5 * age)- 161) * activity);\r\n        }\r\n    };\r\n    // Работа с localStorage\r\n    if (localStorage.getItem(\"activity\")) {\r\n        elemArray.activity = localStorage.getItem(\"activity\");\r\n    }else {\r\n        localStorage.setItem(\"activity\", \"1.375\");\r\n    }\r\n    if (localStorage.getItem(\"gender\")) {\r\n        elemArray.gender = localStorage.getItem(\"gender\"); \r\n    }else {\r\n        localStorage.setItem(\"gender\", \"female\");\r\n    }\r\n    // Вызов чтобы обновить результат на ноль\r\n    getResult();\r\n\r\n    // Работа с localStorage\r\n    const initLocalSettings = (selector) => {\r\n\r\n        const elements = document.querySelectorAll(selector);\r\n        \r\n        elements.forEach(elem => {\r\n            elem.classList.remove(\"calculating__choose-item_active\");\r\n            if (elem.getAttribute(\"data-activity\") === localStorage.getItem(\"activity\")) {\r\n                elem.classList.add(\"calculating__choose-item_active\");\r\n            }\r\n            if (elem.getAttribute(\"data-gender\") === localStorage.getItem(\"gender\")) {\r\n                elem.classList.add(\"calculating__choose-item_active\");\r\n            }\r\n        });\r\n    };\r\n    initLocalSettings(\"#gender div\");\r\n    initLocalSettings(\".calculating__choose_big div\");\r\n    function getStaticData(selector) {\r\n        const elements = document.querySelectorAll(selector);\r\n        \r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                \r\n\r\n                if (e.target.getAttribute('data-activity')) {\r\n                    elemArray.activity = +e.target.getAttribute('data-activity');\r\n                    localStorage.setItem(\"activity\", +e.target.getAttribute('data-activity'));        \r\n                } else {\r\n                    elemArray.gender = e.target.getAttribute('data-gender');\r\n                    localStorage.setItem(\"gender\", e.target.getAttribute('data-gender'));\r\n                }\r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(\"calculating__choose-item_active\");\r\n                });\r\n    \r\n                e.target.classList.add(\"calculating__choose-item_active\");\r\n    \r\n                getResult();\r\n            });\r\n        });\r\n    }\r\n\r\n    function getDynamicData(selector) {\r\n        const element = document.querySelector(`#${selector}`);\r\n            element.addEventListener('input', (e) => {\r\n                if (e.target.value.match(/\\D/g)) {\r\n                    e.target.style.border = \"1px red solid\";\r\n                } else {\r\n                    e.target.style.border = \"none\";\r\n                }\r\n                elemArray[selector] = e.target.value;    \r\n                getResult();\r\n            });\r\n    }\r\n    getStaticData(\"#gender div\");\r\n    getStaticData(\".calculating__choose_big div\");\r\n    getDynamicData(\"height\"); \r\n    getDynamicData(\"weight\"); \r\n    getDynamicData(\"age\"); \r\n\r\n}\r\nexport default calculator;","import {getData} from \"../services/services\";\r\n\r\nfunction cards() {\r\n        const menuField = document.querySelector(\".menu__field\"),\r\n              menuFieldContainer = menuField.querySelector(\".container\");\r\n\r\n    // Создаём класс\r\n    class MenuCard {\r\n        constructor(img,title, descr, price, parentSelector, ...classes ) {\r\n            this.img = img;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.parentSelector = parentSelector;\r\n            this.alt = \"image\";\r\n            this.classes = classes;\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n        }\r\n\r\n        // Метод обмен валют\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        // Метод добавления на страницу\r\n        addToHTML() {\r\n            if (this.classes.length === 0) {\r\n                this.classes = \"menu__item\";\r\n            } else {\r\n                let i = \"\";\r\n                for (let k of this.classes) {\r\n                    i += `${k} `;\r\n                }\r\n                this.classes = i;\r\n            }\r\n            this.parentSelector.innerHTML += `\r\n            <div class=\"${this.classes}\">\r\n                <img src=\"${this.img}\" alt=\"${this.alt}\">\r\n                <h3 class=\"menu__item-subtitle\">${this.title}\"</h3>\r\n                <div class=\"menu__item-descr\">${this.descr} </div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            </div>`;\r\n        }\r\n              \r\n    }\r\n\r\n\r\n    // Создаём get запрос и с полученными данными добавляем табы на страницу\r\n    getData(\"http://localhost:3000/menu\")\r\n    // применение деструктуризации в forEach\r\n    .then((data)=>data.data.forEach(({img, title, descr, price}) => {\r\n        new MenuCard(img, title, descr, price, menuFieldContainer, \"menu__item\").addToHTML();\r\n    }));\r\n       \r\n}\r\nexport default cards;","    // Функция скрытия модального окна\r\n    function closeModal (modalSelector) {\r\n        const modal = document.querySelector(modalSelector);\r\n        modal.style.display = \"none\";\r\n        document.body.style.overflow = \"\";    \r\n    }\r\n\r\n    // Функция показа модального окна\r\n    function showModal (modalSelector, modalTimerId) {\r\n        const modal = document.querySelector(modalSelector);\r\n        modal.style.display = \"block\";\r\n        document.body.style.overflow = \"hidden\"; \r\n        if (modalTimerId) {\r\n            clearInterval(modalTimerId);  \r\n        }\r\n    }\r\n\r\nfunction modal(modalOpenSelector, modalSelector, modalTimerId) {\r\n    // Находим нужные классы\r\n    const modal = document.querySelector(modalSelector),\r\n        modalOpen = document.querySelectorAll(modalOpenSelector);\r\n\r\n\r\n\r\n    // Вешаем лисенер на клик для каждой кнопки\r\n    modalOpen.forEach(element => {\r\n        element.addEventListener(\"click\", () => showModal(modalSelector, modalTimerId));\r\n    }); \r\n\r\n    // Вешаем лисенер на клик на подложку модального окна для закрытия модального окна и на кнопку закрытия\r\n    modal.addEventListener(\"click\", (e) => {\r\n        if (e.target === modal || e.target.getAttribute(\"data-close\") == \"\") {\r\n            closeModal(modalSelector);\r\n        }     \r\n    });\r\n\r\n    // Лисенер на кнопку Escape для закрытия модального окна\r\n    document.addEventListener(\"keydown\", (e) => {\r\n        if (e.code === \"Escape\" && modal.style.display === \"block\") {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n\r\n\r\n    // Лисенер на скрол в котором запускаем функцию показа модального окна при пролистывании до конца страницы\r\n    window.addEventListener(\"scroll\", showModalByScrol);\r\n\r\n    // Функция открытия модального окна в конце страницы\r\n    function showModalByScrol() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight -1) {\r\n            showModal(modalSelector, modalTimerId);\r\n            window.removeEventListener(\"scroll\", showModalByScrol);\r\n        }\r\n    }\r\n}\r\nexport default modal;\r\nexport {closeModal};\r\nexport {showModal};","import {closeModal, showModal} from \"./modal\";\r\nimport {postData} from \"../services/services\";\r\n\r\nfunction post(formSelector, modalTimerId) {\r\n    \r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    // Сообщения для пользователя при обрабоке пост запроса\r\n    const message = {\r\n        loading: \"img/form/spinner.svg\",\r\n        succes: \"Спасибо, мы скоро с Вами свяжемся\",\r\n        failure: \"Что-то пошло не так\"\r\n    };\r\n    forms.forEach(form => {\r\n        bindPostData(form);\r\n    });\r\n\r\n\r\n\r\n    // Главная функция\r\n    function bindPostData(form) {\r\n        form.addEventListener(\"submit\", (e)=>{\r\n            e.preventDefault();\r\n\r\n            // Сообщение для пользователя\r\n            const statusMessage = document.createElement(\"img\");\r\n            statusMessage.src = message.loading ;\r\n\r\n            // Применяем css стили\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            \r\n            // Добавление в конец формы\r\n            form.insertAdjacentElement(\"afterend\", statusMessage);\r\n\r\n            // Создание дата файла\r\n            const formData = new FormData(form);\r\n\r\n            // // Если нужно отослать в формате json \r\n            // // Вариант 1\r\n            // const object = {};\r\n            // formData.forEach(function(value, key){\r\n            //     object[key] = value;\r\n            // });\r\n\r\n            // Вариант 2\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            // Создание пост запроса\r\n            postData(\"http://localhost:3000/requests\", json)\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                showThanksDialog(message.succes);\r\n                statusMessage.remove();\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n                showThanksDialog(message.failure);\r\n            }).finally(() => {\r\n                form.reset();\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    // Красивое оповещение\r\n    function showThanksDialog(message){\r\n        const prevModalDialog = document.querySelector(\".modal__dialog\");\r\n\r\n        prevModalDialog.classList.add(\"hide\");\r\n        showModal(\".modal\", modalTimerId);\r\n\r\n        const thanksModal = document.createElement(\"div\");\r\n        thanksModal.classList.add(\"modal__dialog\");\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n\r\n        document.querySelector(\".modal\").append(thanksModal);\r\n        setTimeout(()=> {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add(\"show\");\r\n            prevModalDialog.classList.remove(\"hide\");\r\n            closeModal(\".modal\");\r\n        }, 4000);\r\n\r\n        }\r\n}\r\nexport default post;","function slider({sliderArg, slides, prev, next, totalSlides, curentSlide, sliderFieldArg} ) {\r\n\r\n    // Подобие БД\r\n    const sliderImagesDB = [{\r\n        img: \"img/slider/pepper.jpg\",\r\n        alt: \"pepper\",\r\n        hide: false\r\n    }, {\r\n        img: \"img/slider/food-12.jpg\",\r\n        alt: \"food\",\r\n        hide: true\r\n    }, {\r\n        img: \"img/slider/olive-oil.jpg\",\r\n        alt: \"oil\",\r\n        hide: true\r\n    }, {\r\n        img: \"img/slider/paprika.jpg\",\r\n        alt: \"paprika\",\r\n        hide: true\r\n    }, ];\r\n    \r\n    const slider = document.querySelector(sliderArg),\r\n          sliderSlides = document.querySelectorAll(slides),\r\n          sliderPrev = document.querySelector(prev),\r\n          sliderNext = document.querySelector(next),\r\n          sliderTotalSlides = document.querySelector(totalSlides),\r\n          sliderCurrentSlide = document.querySelector(curentSlide),\r\n          sliderField = document.querySelector(sliderFieldArg),\r\n          width = window.getComputedStyle(slider).width;\r\n    // Две вспомогательные переменные оффсет для перемещения слайдов, слайд индекс для отображение текущего слайда\r\n    let offset = 0,\r\n        slideIndex = 1;\r\n    // Функция для отображения текущего слайда и общего количества слайдов\r\n    const changeSliderCounter = function() {\r\n        if (sliderSlides.length <10) {\r\n            sliderTotalSlides.textContent = `0${sliderSlides.length}`;\r\n            sliderCurrentSlide.textContent = `0${slideIndex}`;\r\n\r\n        } else {\r\n            sliderTotalSlides.textContent = sliderSlides.length;\r\n            sliderCurrentSlide.textContent = slideIndex;\r\n        }\r\n    };    \r\n    // Первый вызов для корректного отображения\r\n    changeSliderCounter();\r\n    // Полная ширина слайдера и прочие настройки для слайдера\r\n    sliderField.style.width = 100 * sliderSlides.length + \"%\";\r\n    sliderField.style.display = \"flex\";\r\n    sliderField.style.transition = \"0.5s all\";\r\n    slider.style.overflow = \"hidden\";\r\n    // Задаём каждому слайдеру ширину\r\n    sliderSlides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n    // Функция передвижения слайда\r\n    const moveSlide = () => {\r\n        sliderField.style.transform = `translateX(-${offset}px)`;\r\n    };\r\n    // Клик-ивенты следущий/предыдущий слайды\r\n    sliderNext.addEventListener(\"click\", ()=>{\r\n        if (offset == Number.parseInt(width) * (sliderSlides.length -1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += Number.parseInt(width);\r\n        }\r\n        moveSlide();\r\n        if (slideIndex == sliderSlides.length) {\r\n            slideIndex = 1;\r\n            dotActive(slideIndex-1);\r\n            changeSliderCounter();\r\n        } else {\r\n            slideIndex++;\r\n            dotActive(slideIndex-1);\r\n            changeSliderCounter();\r\n        }\r\n        \r\n    });\r\n    sliderPrev.addEventListener(\"click\", () => {\r\n        if (offset == 0) {\r\n            offset = Number.parseInt(width) * (sliderSlides.length -1);\r\n        } else {\r\n            offset -= Number.parseInt(width);\r\n        }\r\n        moveSlide();\r\n        if (slideIndex == 1) {\r\n            slideIndex = sliderSlides.length;\r\n            dotActive(slideIndex-1);\r\n            changeSliderCounter();\r\n        } else {\r\n            slideIndex--;\r\n            dotActive(slideIndex-1);\r\n            changeSliderCounter();\r\n        }\r\n    });\r\n    \r\n    \r\n// Навигация для слайдов\r\n\r\n\r\n    slider.style.position = \"relative\";\r\n\r\n    const carouselIndicator = document.createElement(\"div\");\r\n\r\n    \r\n    carouselIndicator.classList.add(\"carousel-indicators\");\r\n    slider.append(carouselIndicator);\r\n\r\n    // Функция создания \"точек\" для навигации        \r\n    const addNewDot = function(parentSelector,dataAttr){\r\n        let dot = document.createElement('div');\r\n        dot.className = 'dot';\r\n        parentSelector.append(dot);\r\n    };\r\n    // Функция показа активной \"точки\"\r\n    const dotActive = (num) => {\r\n        dot.forEach(element => {\r\n            element.classList.remove(\"dot__active\");\r\n        });\r\n        dot[num].classList.add(\"dot__active\");\r\n    };\r\n    // Создаём \"точки\" для каждого слайда\r\n    for (let i = 1; i <= sliderImagesDB.length; i++ ) {\r\n        addNewDot(carouselIndicator, i);\r\n    }\r\n\r\n    const dot = document.querySelectorAll(\".dot\");\r\n    dot[0].classList.add(\"dot__active\");\r\n\r\n\r\n    dot.forEach((element, index) => {\r\n        element.addEventListener(\"click\", (event) => {\r\n            dotActive(index);\r\n            slideIndex = index+1;\r\n            offset = +width.slice(0, width.length - 2) * index;\r\n            moveSlide();\r\n            changeSliderCounter();\r\n            \r\n        });\r\n    });\r\n}\r\nexport default slider;","function tabs(tabsSelector,tabsContentSelector,activeSelector) {\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n    tabsContent = document.querySelectorAll(tabsContentSelector);\r\n\r\n    // Функция скрытия табов\r\n    function hideTabContent() {\r\n        tabsContent.forEach((event) => {\r\n            event.classList.add(\"hide\");\r\n        });\r\n        tabs.forEach((event) => {\r\n            event.classList.remove(activeSelector);\r\n        });        \r\n    }\r\n    \r\n    // Функция показа табов\r\n    function showTabContent(arg=0) {\r\n        tabsContent[arg].classList.remove(\"hide\");\r\n        tabs[arg].classList.add(activeSelector);\r\n    }\r\n\r\n    // Скрываем табы, показываем таб по умолчанию\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    // Вешаем лисенер на клик для каждого таба\r\n    tabs.forEach((item, i) => {\r\n        item.addEventListener(\"click\", (event) => {\r\n            hideTabContent();\r\n            showTabContent(i);\r\n        });\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer(id, deadline) {\r\n\r\n        // Функция для формирования окончательной даты\r\n        function getTimeRemaining(deadline) {\r\n            const t = Date.parse(deadline) - Date.parse(new Date()),\r\n                  days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n                  hours = Math.floor((t / (1000 * 60 * 60) ) % 24),\r\n                  minutes = Math.floor(t / (1000 * 60) ) % 60,\r\n                  seconds = Math.floor((t / 1000) ) % 60;\r\n            return {\r\n                \"total\" : t,\r\n                \"days\" : days,\r\n                \"hours\" : hours,\r\n                \"minutes\" : minutes,\r\n                \"seconds\" : seconds\r\n            };\r\n        }\r\n    \r\n    \r\n        // Главная функция \r\n        function setClock(selector, endtime) {\r\n            const timer = document.querySelector(selector),\r\n                  days = timer.querySelector(\"#days\"),\r\n                  hours = timer.querySelector(\"#hours\"),\r\n                  minutes = timer.querySelector(\"#minutes\"),\r\n                  seconds = timer.querySelector(\"#seconds\"),\r\n                  //Включаем повтор функции обновления таймера   \r\n                  timeInterval = setInterval(updateClock, 1000);\r\n    \r\n            // Обновляем таймер, чтобы сразу показывалось актуальная дата окончания \r\n            updateClock();\r\n    \r\n            // Функция обновления таймера\r\n            function updateClock() {\r\n                const t = getTimeRemaining(endtime);\r\n    \r\n                days.innerHTML = t.days > 9 ? t.days : \"0\"+ t.days;\r\n                hours.innerHTML = t.hours > 9 ? t.hours : \"0\"+ t.hours;\r\n                minutes.innerHTML = t.minutes > 9 ? t.minutes : \"0\"+ t.minutes;\r\n                seconds.innerHTML = t.seconds > 9 ? t.seconds : \"0\"+ t.seconds;\r\n                // Если наступил дедлайн останавливаем обновление таймера\r\n                if (t.total <= 0) {\r\n                    clearInterval(timeInterval);\r\n                    days.innerHTML = \"00\";\r\n                    hours.innerHTML = \"00\";\r\n                    minutes.innerHTML = \"00\";\r\n                    seconds.innerHTML = \"00\";\r\n                }\r\n            }\r\n        }\r\n    \r\n        // Запуск главной функции\r\n        setClock(id, deadline);\r\n}\r\nexport default timer;","    // Функция post запроса с использование fetch и возврат промиса в формате json\r\n    const postData = async (url, data) => {\r\n        const res = await axios.post(url, data);\r\n\r\n        return res;\r\n    };\r\n    // Функция создания get запроса\r\n    const getData = async function(url) {\r\n        const res = await axios.get(url);\r\n        // if (!res.ok) {\r\n        //     throw new Error(`Could not fetch ${url}, status: ${res.satus}`);\r\n        // }\r\n        return await res;\r\n    };\r\n    export {postData};\r\n    export {getData};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\r\n// Табы\r\nimport tabs from \"./modules/tabs\";\r\n// Таймер\r\n    import timer from \"./modules/timer\";\r\n// Модальное окн;\r\n    import  modal from \"./modules/modal\";\r\n// Карточки \"Наше меню на день;\r\n    import cards from \"./modules/cards\";\r\n// Post запрос;\r\n    import post from \"./modules/post\";\r\n// Слайде;\r\n    import slider from \"./modules/slider\";\r\n// Калькулятор\r\n    import calculator from \"./modules/calculator\";\r\n// show modal\r\n    import showModal from \"./modules/modal\";\r\n// Для того чтобы скрипт выполнялся после загрузки DOM дерева вешаем отлов события\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n    // Таймер запуска модального окна\r\n    const modalTimerId = setTimeout(() => showModal(\".modal\", modalTimerId), 10000000000000);\r\n\r\n    tabs(\".tabheader__item\",\".tabcontent\" ,\"tabheader__item_active\");\r\n    timer(\".timer\", \"2022-06-29\");\r\n    modal(\"[data-modal]\", \".modal\", modalTimerId);\r\n    cards();\r\n    post(\"form\", modalTimerId);\r\n    slider({\r\n        sliderArg : \".offer__slider-wrapper\",\r\n        slides : \".offer__slide\",\r\n        prev : \".offer__slider-prev\",\r\n        next : \".offer__slider-next\",\r\n        totalSlides : \"#total\",\r\n        curentSlide : \"#current\",\r\n        sliderFieldArg : \".offer__slider-inner\"\r\n    }),\r\n    calculator();\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"sourceRoot":""}